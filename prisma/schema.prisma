// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  role      Role      @default(CLIENT)
  services  Service[] @relation("BarberServices")
  bookings  Booking[] @relation("ClientBookings")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Service {
  id        String   @id @default(uuid())
  name      String
  price     Float
  duration  Int      
  barber    User     @relation("BarberServices", fields: [barberId], references: [id])
  barberId  String
  bookings  Booking[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Booking {
  id        String     @id @default(uuid())
  client    User       @relation("ClientBookings", fields: [clientId], references: [id])
  clientId  String
  service   Service    @relation(fields: [serviceId], references: [id])
  serviceId String
  date      DateTime
  status    BookingStatus @default(PENDING)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

enum Role {
  CLIENT
  BARBER
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELED
}